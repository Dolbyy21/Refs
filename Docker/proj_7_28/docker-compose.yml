version: '3.8'

services:
  # This is something like a container name and the host in settings.py
  db:

    # Name of the image that we want to pull from dockerhub
    image: postgres

    # HOST_PORT : CONTAINER_PORT 
    ports:
      - 5432:5432
    restart: always
    # networks:
    #   some_network:

    # password, user, name in settings.py, these are the credentials with which the new postgres user and password gets created and database will get created.
    environment:
      POSTGRES_PASSWORD: my_password 
      POSTGRES_USER: my_user 
      POSTGRES_DB: my_db 
      

  backend_python:

    # Name of the image that we want to pull from dockerhub 
    image: python:3.10.5-alpine3.15

    # command: sh -c "cd p7_28  && "
    

    build: ./p7_28

    # HOST_PORT : CONTAINER_PORT 
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    # command: sh -c "ls && cd ./usr/src/app python3 manage.py runserver "

    # backend_python container depends on db_postgres
    depends_on:
      - db
  
  basic:
    # building the Dockerfile in frontend folder
    build: ./frontend
    # volumes:
    #   - ./frontend:/app/frontend
    #   # One-way volume to use node_modules from inside image
    #   - /app/frontend/node_modules

    # HOST PORT : CONTAINER PORT
    ports:
      - "3000:3000"

    environment:
      - NODE_ENV=development

    # Front depends on backend_server
    depends_on:
      - backend_python

    # to start frontend server
    command: npm start
